// vim: noai:ts=4:sw=4

// Requirements
var path       = require("path");
var express    = require("express");
var sharejs    = require("share").server;
var port       = process.env.PORT || 8888;
var server     = express();
var redis      = require("redis").createClient(process.env.REDISPORT || "6379", process.env.REDISHOST || "localhost");
var RedisStore = require("connect-redis");
    RedisStore = RedisStore(express);
var options = {
    sharejs : {
        db: {
            type : "redis"
          },
        opsBeforeCommit : 1
    },
    session_store : new RedisStore({ client : redis }),
    remotes : {
        manager  : process.env.MANAGERURI,
        compiler : process.env.COMPILERURI
    },
    ide_html_path : process.env.NODE_ENV === "staging" || process.env.NODE_ENV === "production" ?  "/../statics/ide.min.html" : "/../statics/ide.html" 
};
var exports    = {};
var __main_dirname;

module.exports = function(main_dirname){
    __main_dirname = main_dirname;
    return exports;
};

// Configuring the server
// - We're storing the sessions in redis too.
// - The sessions' secret string is generated by hand.
// - There are some modification to the server according the
//   NODE_ENV variable, you can see them below this block.
server.configure(function(){
    server.use(express.cookieParser());
    server.use(express.bodyParser());
    server.use("/ide/img", express.static(path.normalize(__dirname + "/../assets/img")));
});

// If NODE_ENV is not set,
// let's use the long version of our custom ace.
server.configure("development", function(){
    server.use("/ide/src", express.static(path.normalize(__dirname + "/../assets/ace-build/src")));
    server.use("/ide/css", express.static(path.normalize(__dirname + "/../assets/css")));
    server.use("/ide/js", express.static(path.normalize(__dirname + "/../assets/js")));
    server.use(express.session({
        secret : "k1X><?>>CJ9vXOJgWGwPbcsjVn=uV:zHvk8!geagC<nB<0aAAfX5C<5gmsB>",
        store  : options.session_store
    }));
});

// For testing purposes
server.configure("test", function(){
    server.use("src", express.static(path.normalize(__dirname + "/../assets/ace-build/src")));
    server.use("css", express.static(path.normalize(__dirname + "/../assets/css")));
    server.use("js", express.static(path.normalize(__dirname + "/../assets/js")));
    server.use(express.session({
        secret : "k1X><?>>CJ9vXOJgWGwPbcsjVn=uV:zHvk8!geagC<nB<0aAAfX5C<5gmsB>",
        store  : options.session_store
    }));
});

// If NODE_ENV=staging
// let's use the minified version of our custom ace.
server.configure("staging", function(){
    server.use("src", express.static(path.normalize(__dirname + "/../assets/ace-build/src-min")));
    server.use("css", express.static(path.normalize(__dirname + "/../assets/css-min")));
    server.use("js", express.static(path.normalize(__dirname + "/../assets/js-min")));
    server.use(express.session({
        secret : "k1X><?>>CJ9vXOJgWGwPbcsjVn=uV:zHvk8!geagC<nB<0aAAfX5C<5gmsB>",
        // cookie : { secure : true },
        store  : options.session_store
    }));
});

// If NODE_ENV=production
// let's use the minified version of our custom ace.
server.configure("production", function(){
    server.use("src", express.static(path.normalize(__dirname + "/../assets/ace-build/src-min")));
    server.use("css", express.static(path.normalize(__dirname + "/../assets/css-min")));
    server.use("js", express.static(path.normalize(__dirname + "/../assets/js-min")));
    server.use(express.session({
        secret : "k1X><?>>CJ9vXOJgWGwPbcsjVn=uV:zHvk8!geagC<nB<0aAAfX5C<5gmsB>",
        // cookie : { secure : true },
        store  : options.session_store
    }));
});

// Attach sharejs interfaces to the server.
sharejs.attach(server, options.sharejs);

// Router
require("./router")(server, options);

// Exports are used in the tests
module.exports = {
    model   : server.model,
    options : options,
    port    : port,
    redis   : redis
};
module.exports.server = server.listen(port, function(){
    var env_msg = process.env.NODE_ENV ? process.env.NODE_ENV + " " : "";
    console.log(env_msg + "server running at http://127.0.0.1:" + port + "/ide");
});
